<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>使用express快速搭建一个node服务器</title>
      <link href="//articles/expr/"/>
      <url>//articles/expr/</url>
      
        <content type="html"><![CDATA[<h5 id="安装express"><a href="#安装express" class="headerlink" title="安装express"></a>安装express</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install express -g            <span class="comment">// 全局安装express</span></span><br><span class="line">npm install express-generator -g  <span class="comment">// 全局安装express脚手架,安装之后可以使用</span></span><br><span class="line">express --version                 <span class="comment">// 检查express版本，是否安装成功</span></span><br><span class="line">express -h       <span class="comment">//-h 参数可以列出所有可用的命令行参数</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>Options:</p><pre><code>-h, --help          输出使用方法    --version       输出版本号-e, --ejs           添加对 ejs 模板引擎的支持    --hbs           添加对 handlebars 模板引擎的支持    --pug           添加对 pug 模板引擎的支持-H, --hogan         添加对 hogan.js 模板引擎的支持    --no-view       创建不带视图引擎的项目-v, --view &lt;engine&gt; 添加对视图引擎（view） &lt;engine&gt; 的支持 (ejs|hbs|hjs|jade|pug|twig|vash) （默认是 jade 模板引擎）-c, --css &lt;engine&gt;  添加样式表引擎 &lt;engine&gt; 的支持 (less|stylus|compass|sass) （默认是普通的 css 文件）    --git           添加 .gitignore-f, --force         强制在非空目录下创建</code></pre><h5 id="这里我们直接使用-express-myapp"><a href="#这里我们直接使用-express-myapp" class="headerlink" title="这里我们直接使用 express myapp"></a>这里我们直接使用 express myapp</h5><p><img src="https://img-blog.csdnimg.cn/2019122710193028.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMTg2NzMw,size_16,color_FFFFFF,t_70" alt=""></p><h5 id="进入项目文件夹，安装所需要的依赖"><a href="#进入项目文件夹，安装所需要的依赖" class="headerlink" title="进入项目文件夹，安装所需要的依赖"></a>进入项目文件夹，安装所需要的依赖</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><h5 id="项目目录"><a href="#项目目录" class="headerlink" title="项目目录"></a>项目目录</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">├── bin             项目启动文件</span><br><span class="line">├── node_modules    项目依赖文件</span><br><span class="line">├── public          静态资源</span><br><span class="line">├── routes          路由文件</span><br><span class="line">├── views           模板</span><br><span class="line">├── app.js          主文件（入口文件）</span><br><span class="line">├── package.json    项目说明文件(所有依赖的名称)</span><br></pre></td></tr></table></figure><p><strong>默认启动的端口是3000，你也可以根据你自己的需要修改，找到bin目录下面的www文件</strong><br><img src="https://img-blog.csdnimg.cn/20191227103214463.png" alt="这里修改成你需要的端口即可"></p><h5 id="app-js文件说明"><a href="#app-js文件说明" class="headerlink" title="app.js文件说明"></a>app.js文件说明</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//加载处理错误的中间件</span></span><br><span class="line"><span class="keyword">var</span> createError = <span class="built_in">require</span>(<span class="string">'http-errors'</span>);</span><br><span class="line"><span class="comment">//引入express</span></span><br><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="comment">//处理路径模块</span></span><br><span class="line"><span class="keyword">var</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="comment">//处理cookie中间件</span></span><br><span class="line"><span class="keyword">var</span> cookieParser = <span class="built_in">require</span>(<span class="string">'cookie-parser'</span>);</span><br><span class="line"><span class="comment">//处理访问日志中间件</span></span><br><span class="line"><span class="keyword">var</span> logger = <span class="built_in">require</span>(<span class="string">'morgan'</span>);</span><br><span class="line"><span class="comment">//路由入口文件</span></span><br><span class="line"><span class="keyword">var</span> indexRouter = <span class="built_in">require</span>(<span class="string">'./routes/index'</span>);</span><br><span class="line"><span class="comment">//HTTP请求体解析的中间件</span></span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">'body-parser'</span>);</span><br><span class="line"><span class="comment">//express实例</span></span><br><span class="line"><span class="keyword">var</span> app = express();</span><br><span class="line"><span class="comment">//我自己加的处理请求跨域</span></span><br><span class="line">app.all(<span class="string">'*'</span>,<span class="function"><span class="keyword">function</span> (<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line">  res.header(<span class="string">'Access-Control-Allow-Origin'</span>, <span class="string">'*'</span>);</span><br><span class="line">  res.header(<span class="string">'Access-Control-Allow-Methods'</span>, <span class="string">'PUT,POST,GET,DELETE,OPTIONS'</span>)</span><br><span class="line">  <span class="comment">//修改程序信息与版本</span></span><br><span class="line">  res.header(<span class="string">'X-Powered-By'</span>, <span class="string">' 3.2.1'</span>)</span><br><span class="line">  <span class="comment">//内容类型：如果是post请求必须指定这个属性</span></span><br><span class="line">  res.header(<span class="string">'Content-Type'</span>, <span class="string">'application/json;charset=utf-8'</span>)</span><br><span class="line">   <span class="keyword">if</span>(req.method==<span class="string">"OPTIONS"</span>) res.send(<span class="number">200</span>);<span class="comment">/*让options请求快速返回*/</span></span><br><span class="line">    <span class="keyword">else</span>  next();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.use(bodyParser.json())</span><br><span class="line">app.use( bodyParser.urlencoded(&#123;<span class="attr">extended</span>:<span class="literal">false</span>&#125;))</span><br><span class="line"><span class="comment">// view engine setup</span></span><br><span class="line">app.set(<span class="string">'views'</span>, path.join(__dirname, <span class="string">'views'</span>));</span><br><span class="line">app.set(<span class="string">'view engine'</span>, <span class="string">'jade'</span>);</span><br><span class="line"></span><br><span class="line">app.use(logger(<span class="string">'dev'</span>));</span><br><span class="line">app.use(express.json());</span><br><span class="line">app.use(express.urlencoded(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;));</span><br><span class="line">app.use(cookieParser());</span><br><span class="line">app.use(express.static(path.join(__dirname, <span class="string">'public'</span>)));</span><br><span class="line"></span><br><span class="line">app.use(<span class="string">'/'</span>, indexRouter);</span><br><span class="line"></span><br><span class="line"><span class="comment">// catch 404 and forward to error handler</span></span><br><span class="line">app.use(<span class="function"><span class="keyword">function</span>(<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line">  next(createError(<span class="number">404</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// error handler</span></span><br><span class="line">app.use(<span class="function"><span class="keyword">function</span>(<span class="params">err, req, res, next</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// set locals, only providing error in development</span></span><br><span class="line">  res.locals.message = err.message;</span><br><span class="line">  res.locals.error = req.app.get(<span class="string">'env'</span>) === <span class="string">'development'</span> ? err : &#123;&#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// render the error page</span></span><br><span class="line">  res.status(err.status || <span class="number">500</span>);</span><br><span class="line">  res.render(<span class="string">'error'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = app;</span><br></pre></td></tr></table></figure><h5 id="启动服务器"><a href="#启动服务器" class="headerlink" title="启动服务器"></a>启动服务器</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm start</span><br></pre></td></tr></table></figure><p><em>最后说明：这只是本人自己的一些使用，有不足的地方，欢迎大家前来指正</em></p>]]></content>
      
      
      <categories>
          
          <category> node </category>
          
          <category> express </category>
          
      </categories>
      
      
        <tags>
            
            <tag> node </tag>
            
            <tag> express </tag>
            
            <tag> 服务器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css实现垂直水平居中的几种方法</title>
      <link href="//articles/cssAlgin/"/>
      <url>//articles/cssAlgin/</url>
      
        <content type="html"><![CDATA[<h5 id="父元素不定宽，利用line-height实现"><a href="#父元素不定宽，利用line-height实现" class="headerlink" title="父元素不定宽，利用line-height实现"></a>父元素不定宽，利用line-height实现</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">  .box&#123;</span><br><span class="line">    height: <span class="number">400</span>px;</span><br><span class="line">    background: red;</span><br><span class="line">  &#125;</span><br><span class="line">  .content&#123;</span><br><span class="line">    line-height: <span class="number">400</span>px; <span class="comment">//设置和父元素的高度一样</span></span><br><span class="line">    text-align: center;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;<span class="regexp">/style&gt;</span></span><br><span class="line"><span class="regexp">&lt;div class="box"&gt;</span></span><br><span class="line"><span class="regexp">  &lt;div class="content"&gt;</span></span><br><span class="line"><span class="regexp">    这是子元素子元素子元素这是子元素子元素子元素这是子元素子元素子元素这是子元素子元素子元素</span></span><br><span class="line"><span class="regexp">  &lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure><a id="more"></a><h5 id="使用flex布局"><a href="#使用flex布局" class="headerlink" title="使用flex布局"></a>使用flex布局</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">  .box&#123;</span><br><span class="line">    height: <span class="number">400</span>px;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: center; <span class="comment">/*主轴居中*/</span></span><br><span class="line">    align-items: center;    <span class="comment">/*交叉轴居中*/</span></span><br><span class="line"> &#125;</span><br><span class="line">&lt;<span class="regexp">/style&gt;</span></span><br><span class="line"><span class="regexp">&lt;div class="box"&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div class="content"&gt;</span></span><br><span class="line"><span class="regexp">      这是子元素子元素子元素这是子元素子元素子元素这是子元素子元素子元素这是子元素子元素子元素</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure><h5 id="利用定位和旋转实现"><a href="#利用定位和旋转实现" class="headerlink" title="利用定位和旋转实现"></a>利用定位和旋转实现</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">   .box&#123;</span><br><span class="line">     height: <span class="number">400</span>px;</span><br><span class="line">     position: relative;</span><br><span class="line">     background: red;</span><br><span class="line">   &#125;</span><br><span class="line">   .content&#123;</span><br><span class="line">     position: absolute;</span><br><span class="line">     top: <span class="number">50</span>%;</span><br><span class="line">     left: <span class="number">50</span>%;</span><br><span class="line">     transform: translate(<span class="number">-50</span>%,<span class="number">-50</span>%);</span><br><span class="line">   &#125;</span><br><span class="line">&lt;<span class="regexp">/style&gt;</span></span><br><span class="line"><span class="regexp"> &lt;div class="box"&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div class="content"&gt;</span></span><br><span class="line"><span class="regexp">      这是子元素子元素子元素这是子元素子元素子元素这是子元素子元素子元素这是子元素子元素子元素</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure><h5 id="设置父元素为相对定位，给子元素设置绝对定位"><a href="#设置父元素为相对定位，给子元素设置绝对定位" class="headerlink" title="设置父元素为相对定位，给子元素设置绝对定位"></a>设置父元素为相对定位，给子元素设置绝对定位</h5><p><strong>子元素必须有指定的高度，然后设置 ，top: 0; right: 0; bottom: 0; left: 0; margin: auto;</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">   .box&#123;</span><br><span class="line">     height: <span class="number">400</span>px;</span><br><span class="line">     position: relative;</span><br><span class="line">     background: red;</span><br><span class="line">     width: <span class="number">300</span>px;</span><br><span class="line">   &#125;</span><br><span class="line">   .content&#123;</span><br><span class="line">     position: absolute;</span><br><span class="line">     top: <span class="number">0</span>;</span><br><span class="line">     left: <span class="number">0</span>;</span><br><span class="line">     bottom: <span class="number">0</span>;</span><br><span class="line">     right: <span class="number">0</span>;</span><br><span class="line">     margin: auto;</span><br><span class="line">     height: <span class="number">200</span>px; </span><br><span class="line">   &#125;</span><br><span class="line"> &lt;<span class="regexp">/style&gt;</span></span><br><span class="line"><span class="regexp"> &lt;div class="box"&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div class="content"&gt;</span></span><br><span class="line"><span class="regexp">      这是子元素子元素子元素这是子元素子元素子元素这是子元素子元素子元素这是子元素子元素子元素</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure><h5 id="利用定位和margin实现，子元素必须要定宽和定高。"><a href="#利用定位和margin实现，子元素必须要定宽和定高。" class="headerlink" title="利用定位和margin实现，子元素必须要定宽和定高。"></a>利用定位和margin实现，子元素必须要定宽和定高。</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">   .box&#123;</span><br><span class="line">     height: <span class="number">400</span>px;</span><br><span class="line">     position: relative;</span><br><span class="line">     background: red;</span><br><span class="line">     width: <span class="number">300</span>px;</span><br><span class="line">   &#125;</span><br><span class="line">   .content&#123;</span><br><span class="line">     position: absolute;</span><br><span class="line">     height: <span class="number">200</span>px;</span><br><span class="line">     width: <span class="number">200</span>px;</span><br><span class="line">     top: <span class="number">50</span>%;</span><br><span class="line">     left: <span class="number">50</span>%;</span><br><span class="line">     margin-top: <span class="number">-100</span>px;  <span class="comment">/*是高度的一半*/</span></span><br><span class="line">     margin-left: <span class="number">-100</span>px; <span class="comment">/*是宽度的一半*/</span></span><br><span class="line">   &#125;</span><br><span class="line"> &lt;<span class="regexp">/style&gt;</span></span><br><span class="line"><span class="regexp"> &lt;div class="box"&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div class="content"&gt;</span></span><br><span class="line"><span class="regexp">      这是子元素子元素子元素这是子元素子元素子元素这是子元素子元素子元素这是子元素子元素子元素</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line"> &lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure><h5 id="css3-grid网格"><a href="#css3-grid网格" class="headerlink" title="css3 grid网格"></a>css3 grid网格</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">  .box&#123;</span><br><span class="line">    height: <span class="number">400</span>px;</span><br><span class="line">    background: red;</span><br><span class="line">    width: <span class="number">300</span>px;</span><br><span class="line">    display: grid;</span><br><span class="line">  &#125;</span><br><span class="line">  .content&#123;</span><br><span class="line">    height: <span class="number">200</span>px;</span><br><span class="line">    width: <span class="number">200</span>px;</span><br><span class="line">    justify-self: center;</span><br><span class="line">    align-self: center;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;<span class="regexp">/style&gt;</span></span><br><span class="line"><span class="regexp">&lt;div class="box"&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div class="content"&gt;</span></span><br><span class="line"><span class="regexp">      这是子元素子元素子元素这是子元素子元素子元素这是子元素子元素子元素这是子元素子元素子元素</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure><p>最后说明：这只是本人自己的一些见解，有不足的地方，欢迎大家前来指正。</p>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> 布局 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在宝塔Linux面板怎么运行用node写的api接口</title>
      <link href="//articles/nodePort/"/>
      <url>//articles/nodePort/</url>
      
        <content type="html"><![CDATA[<h5 id="在宝塔面板搜索管理器"><a href="#在宝塔面板搜索管理器" class="headerlink" title="在宝塔面板搜索管理器"></a>在宝塔面板搜索管理器<img src="https://img-blog.csdnimg.cn/20191227095030883.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMTg2NzMw,size_16,color_FFFFFF,t_70" alt=""></h5><a id="more"></a><h5 id="安装PM2管理器，打开设置"><a href="#安装PM2管理器，打开设置" class="headerlink" title="安装PM2管理器，打开设置"></a>安装PM2管理器，打开设置</h5><p><img src="https://img-blog.csdnimg.cn/20191227095349384.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMTg2NzMw,size_16,color_FFFFFF,t_70" alt=""><br><strong>找到你项目所在的根目录，然后添加你启动的入口文件，点击添加就可以</strong></p><h5 id="最后点击启动就可以了。"><a href="#最后点击启动就可以了。" class="headerlink" title="最后点击启动就可以了。"></a>最后点击启动就可以了。</h5><p><strong>最后说明：这只是本人自己的一些见解，有不足的地方，欢迎大家前来指正。</strong></p>]]></content>
      
      
      <categories>
          
          <category> node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> api </tag>
            
            <tag> 宝塔Linux面板 </tag>
            
            <tag> node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue中页面刷新的方法</title>
      <link href="//articles/refresh/"/>
      <url>//articles/refresh/</url>
      
        <content type="html"><![CDATA[<h5 id="使用-Location-对象提供的方法"><a href="#使用-Location-对象提供的方法" class="headerlink" title="使用 Location 对象提供的方法"></a>使用 Location 对象提供的方法</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.location.reload()</span><br></pre></td></tr></table></figure><p>==但是这种方法，有的小米手机不会刷新。==</p><h5 id="使用vue路由提供给我们的方法"><a href="#使用vue路由提供给我们的方法" class="headerlink" title="使用vue路由提供给我们的方法"></a>使用vue路由提供给我们的方法</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.$router.go(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p><strong>相对于当前页面向前或向后跳转多少个页面,类似 window.history.go(n)。n可为正数可为负数。正数返回上一个页面</strong></p><a id="more"></a><p>==但是这种方法，有的小米手机不会刷新。苹果手机也不会刷新==</p><h5 id="使用一个新页面并结合vue路由给我们提供的方法实现页面刷新，这种刷新白屏时间非常短。但是能看见路由快速变化"><a href="#使用一个新页面并结合vue路由给我们提供的方法实现页面刷新，这种刷新白屏时间非常短。但是能看见路由快速变化" class="headerlink" title="使用一个新页面并结合vue路由给我们提供的方法实现页面刷新，这种刷新白屏时间非常短。但是能看见路由快速变化"></a>使用一个新页面并结合vue路由给我们提供的方法实现页面刷新，这种刷新白屏时间非常短。但是能看见路由快速变化</h5><p>  3.1新建一个空白页面组件命名为：empty.vue</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;<span class="regexp">/template&gt;</span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">export default &#123;</span></span><br><span class="line"><span class="regexp">  name: 'empty',</span></span><br><span class="line"><span class="regexp">  beforeRouteEnter (to, from, next) &#123;</span></span><br><span class="line"><span class="regexp">    next(vm =&gt; &#123;</span></span><br><span class="line"><span class="regexp">      vm.$router.replace(from.path)</span></span><br><span class="line"><span class="regexp">    &#125;)</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">&lt;/</span>script&gt;</span><br></pre></td></tr></table></figure><p>  3.2在需要刷新页面的地方</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.$router.push(<span class="string">'/empty'</span>)</span><br></pre></td></tr></table></figure><p><strong>这个页面所作的事情，就是判断页面从那个页面来的，然后在页面还没有加载完成的时候，使用replace方法，拿来的路由替换当前页面，从而实现页面重新加载</strong></p><p>最后说明：这只是本人自己的一些见解，有不足的地方，欢迎大家前来指正。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js常见的面试题算法</title>
      <link href="//articles/jsinterview/"/>
      <url>//articles/jsinterview/</url>
      
        <content type="html"><![CDATA[<h5 id="翻转字符串"><a href="#翻转字符串" class="headerlink" title="翻转字符串"></a>翻转字符串</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">reser</span>(<span class="params">str</span>)</span>&#123;</span><br><span class="line">   <span class="keyword">return</span>  [...str].reverse().join(<span class="string">''</span>)    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="判断回文字符串"><a href="#判断回文字符串" class="headerlink" title="判断回文字符串"></a>判断回文字符串</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span>  <span class="title">Mosl</span>(<span class="params">str</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> stri = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i= str.length; i&gt;=<span class="number">0</span>; i--)&#123;</span><br><span class="line">      stri+= str.charAt(i)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> str === stri</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h5 id="生成指定长度的字符串"><a href="#生成指定长度的字符串" class="headerlink" title="生成指定长度的字符串"></a>生成指定长度的字符串</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">randomStr</span>(<span class="params">n</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> strr = <span class="string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'</span></span><br><span class="line">    <span class="keyword">let</span> str = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line">      str+= strr.charAt(<span class="built_in">Math</span>.round(<span class="built_in">Math</span>.random()* strr.length)) </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> str</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="数组去重"><a href="#数组去重" class="headerlink" title="数组去重"></a>数组去重</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">deWeight</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">return</span>  [... new <span class="built_in">Set</span>(arr)]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="数组求最大值"><a href="#数组求最大值" class="headerlink" title="数组求最大值"></a>数组求最大值</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Max</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Math</span>.max(...arr)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bubbling</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">   <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>; i&lt;arr.length; i++)&#123;</span><br><span class="line">     <span class="keyword">for</span>(<span class="keyword">let</span> j=<span class="number">0</span>; j&lt; arr.length - <span class="number">1</span>; j++)&#123;</span><br><span class="line">       <span class="keyword">if</span>(arr[j]&gt; arr[j+<span class="number">1</span>])&#123;</span><br><span class="line">         [ arr[j], arr[j+<span class="number">1</span>]] = [ arr[j+<span class="number">1</span>], arr[j]]</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> arr</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h5 id="数组排序，从小到大"><a href="#数组排序，从小到大" class="headerlink" title="数组排序，从小到大"></a>数组排序，从小到大</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">arrSort</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">   arr.sort(<span class="function">(<span class="params">a,b</span>)=&gt;</span> a-b)</span><br><span class="line">   <span class="keyword">return</span> arr</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h5 id="浅复制"><a href="#浅复制" class="headerlink" title="浅复制"></a>浅复制</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">copy</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> newObj = arr <span class="keyword">instanceof</span> <span class="built_in">Array</span> ? [] : &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i <span class="keyword">in</span> arr)&#123;</span><br><span class="line">      newObj[i] = arr[i]</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> newObj</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h5 id="深复制"><a href="#深复制" class="headerlink" title="深复制"></a>深复制</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">deepCopy</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> newObj = arr <span class="keyword">instanceof</span> <span class="built_in">Array</span> ? [] : &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i <span class="keyword">in</span> arr)&#123;</span><br><span class="line">      <span class="keyword">if</span>( <span class="keyword">typeof</span> arr[i] == <span class="string">'object'</span>)&#123;</span><br><span class="line">        deepCopy(arr[i])</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        newObj[i] = arr[i]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//借助JSON实现深复制，但是它不能复制对象里面的方法</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">copy</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(arr))</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h5 id="删除重复的字符"><a href="#删除重复的字符" class="headerlink" title="删除重复的字符"></a>删除重复的字符</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">delStr</span>(<span class="params">str</span>)</span>&#123;</span><br><span class="line">   <span class="keyword">return</span> [...new <span class="built_in">Set</span>([...str])].join(<span class="string">''</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="两个相邻相同的字符串抵消"><a href="#两个相邻相同的字符串抵消" class="headerlink" title="两个相邻相同的字符串抵消"></a>两个相邻相同的字符串抵消</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tongDel</span>(<span class="params">str</span>)</span>&#123;</span><br><span class="line">   <span class="keyword">let</span> arr = [...str]</span><br><span class="line">   <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>; i&lt;arr.length; i++)&#123;</span><br><span class="line">     <span class="keyword">for</span>(<span class="keyword">let</span> j=<span class="number">0</span>; j&lt;arr.length - <span class="number">1</span>; j++)&#123;</span><br><span class="line">       <span class="keyword">if</span>(arr[j] === arr[j+<span class="number">1</span>])&#123;</span><br><span class="line">         arr.splice(j,<span class="number">2</span>)</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> arr.join(<span class="string">''</span>)</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h5 id="删除相邻相同的字符串"><a href="#删除相邻相同的字符串" class="headerlink" title="删除相邻相同的字符串"></a>删除相邻相同的字符串</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">delStr</span>(<span class="params">str</span>)</span>&#123;</span><br><span class="line">   <span class="keyword">let</span> arr = [] , newStr </span><br><span class="line">   <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>; i&lt;str.length; i++)&#123;</span><br><span class="line">     <span class="keyword">if</span>(str.charAt(i) !== newStr)&#123;</span><br><span class="line">       arr.push(str[i])</span><br><span class="line">       newStr = str[i]</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> arr.join(<span class="string">''</span>)</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h5 id="写个方法-两个数字变量相互交互值，不借助第三个变量"><a href="#写个方法-两个数字变量相互交互值，不借助第三个变量" class="headerlink" title="写个方法 两个数字变量相互交互值，不借助第三个变量"></a>写个方法 两个数字变量相互交互值，不借助第三个变量</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方法一</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">swop</span>(<span class="params">num1,num2</span>)</span>&#123;</span><br><span class="line">     <span class="comment">// 解构赋值</span></span><br><span class="line">     [num1,num2] = [num2, num1]</span><br><span class="line">     <span class="keyword">return</span> &#123;</span><br><span class="line">       num1,</span><br><span class="line">       num2</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="comment">//方法二</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">newSwop</span>(<span class="params">num1,num2</span>)</span>&#123;</span><br><span class="line"> <span class="comment">//借助数组</span></span><br><span class="line">   num2 = [num1, num1 = num2][<span class="number">0</span>]</span><br><span class="line">   <span class="keyword">return</span> &#123;</span><br><span class="line">     num1,</span><br><span class="line">     num2</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h5 id="统计字符串中次数最多的字母"><a href="#统计字符串中次数最多的字母" class="headerlink" title="统计字符串中次数最多的字母"></a>统计字符串中次数最多的字母</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">statistics</span>(<span class="params">str</span>)</span>&#123;</span><br><span class="line">   <span class="keyword">let</span> arr = [...str]</span><br><span class="line">   <span class="keyword">let</span> obj = &#123;&#125; , num = <span class="number">0</span> , max = <span class="number">0</span></span><br><span class="line">   <span class="keyword">for</span>(<span class="keyword">let</span> j=<span class="number">0</span>; j&lt;arr.length;j++)&#123;</span><br><span class="line">     <span class="keyword">if</span>(obj[arr[j]])&#123;</span><br><span class="line">       obj[arr[j]]++</span><br><span class="line">     &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">       obj[arr[j]] = <span class="number">1</span></span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">//获取字母出现最多的次数</span></span><br><span class="line">   num = <span class="built_in">Math</span>.max(... Object.values(obj))</span><br><span class="line">   <span class="comment">//根据字母出现最多的次数，找到那个字母</span></span><br><span class="line">   <span class="built_in">Object</span>.keys(obj).find( <span class="function">(<span class="params">k</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(obj[k] === num)&#123;</span><br><span class="line">      max = k</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;)</span><br><span class="line">   <span class="keyword">return</span> max</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>最后说明：这只是本人自己的一些使用，有不足的地方，欢迎大家前来指正</em></p>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Array </tag>
            
            <tag> js </tag>
            
            <tag> 面试题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在vue中使用postcss-pxtorem，实现rem布局</title>
      <link href="//articles/postcss-pxtorem/"/>
      <url>//articles/postcss-pxtorem/</url>
      
        <content type="html"><![CDATA[<h5 id="安装postcss-pxtorem插件"><a href="#安装postcss-pxtorem插件" class="headerlink" title="安装postcss-pxtorem插件"></a>安装postcss-pxtorem插件</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install postcss-pxtorem --save</span><br><span class="line">cnpm install postcss-pxtorem --save</span><br></pre></td></tr></table></figure><h5 id="新建rem-js文件"><a href="#新建rem-js文件" class="headerlink" title="新建rem.js文件"></a>新建rem.js文件</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> baseSize = <span class="number">32</span></span><br><span class="line"><span class="comment">// 设置 rem 函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setRem</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 当前页面宽度相对于 750 宽的缩放比例，可根据自己需要修改。</span></span><br><span class="line">  <span class="keyword">const</span> scale = <span class="built_in">document</span>.documentElement.clientWidth / <span class="number">750</span></span><br><span class="line">  <span class="comment">// 设置页面根节点字体大小</span></span><br><span class="line">  <span class="built_in">document</span>.documentElement.style.fontSize = (baseSize * <span class="built_in">Math</span>.min(scale, <span class="number">2</span>)) + <span class="string">'px'</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 初始化</span></span><br><span class="line">setRem()</span><br><span class="line"><span class="comment">// 改变窗口大小时重新设置 rem</span></span><br><span class="line"><span class="built_in">window</span>.onresize = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  setRem()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h5 id="在package-json中，设置postcss-pxtorem"><a href="#在package-json中，设置postcss-pxtorem" class="headerlink" title="在package.json中，设置postcss-pxtorem"></a>在package.json中，设置postcss-pxtorem</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"postcss"</span>: &#123;</span><br><span class="line">    <span class="string">"plugins"</span>: &#123;</span><br><span class="line">      <span class="string">"autoprefixer"</span>: &#123;&#125;,</span><br><span class="line">      <span class="string">"postcss-pxtorem"</span>: &#123;</span><br><span class="line">        <span class="string">"rootValue"</span>: <span class="number">32</span>,</span><br><span class="line">        <span class="string">"propList"</span>: [</span><br><span class="line">          <span class="string">"*"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">"selectorBlackList"</span>: [</span><br><span class="line">          <span class="string">"van-"</span></span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><strong>说明：<code>selectorBlackList</code> 是一个数组，可以设置不转换的类名。这里的<code>vant-</code>是 <code>vant</code> ui库样式的前缀</strong></p><h5 id="在main-js中引入rem-js"><a href="#在main-js中引入rem-js" class="headerlink" title="在main.js中引入rem.js"></a>在<code>main.js</code>中引入<code>rem.js</code></h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'./utils/rem'</span></span><br></pre></td></tr></table></figure><p><strong>说明：这里引入的是你自己文件的路径</strong></p><p><strong>5.打开浏览器调试，如果效果如下图，说明设置成功</strong><br><img src="https://img-blog.csdnimg.cn/20191118095751694.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMTg2NzMw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><em>最后说明：这只是本人自己的一些使用，有不足的地方，欢迎大家前来指正</em></p>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> postcss-pxtorem </tag>
            
            <tag> rem </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决在vue中使用axios,发送请求会发送option空请求的问题</title>
      <link href="//articles/axios/"/>
      <url>//articles/axios/</url>
      
        <content type="html"><![CDATA[<h5 id="先让我们来看看为什么浏览器会多发送一个空的option请求呢"><a href="#先让我们来看看为什么浏览器会多发送一个空的option请求呢" class="headerlink" title="先让我们来看看为什么浏览器会多发送一个空的option请求呢"></a>先让我们来看看为什么浏览器会多发送一个空的option请求呢</h5><p>因为浏览器在某些请求中，在正式通信前会增加一次HTTP查询请求，称为”预检”请求（preflight）<br>浏览器先询问服务器，当前网页所在的域名是否在服务器的许可名单之中，以及可以使用哪些HTTP动词和头信息字段。只有得到肯定答复，浏览器才会发出正式的XMLHttpRequest请求，否则就报错。</p><p>本地环境请求接口的时候，每次请求接口之前都会多一次OPTIONS请求。</p><p><strong>但是有时候空的option请求，后端也处理了，这不是我们想要的结果，那怎么处理呢，我们可以借助qs模块解决这个问题</strong></p><h5 id="安装qs模块"><a href="#安装qs模块" class="headerlink" title="安装qs模块"></a>安装qs模块</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install qs --save</span><br></pre></td></tr></table></figure><a id="more"></a><h5 id="设置axios的请求头类型"><a href="#设置axios的请求头类型" class="headerlink" title="设置axios的请求头类型"></a>设置axios的请求头类型</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">axios.defaults.headers[<span class="string">'Content-Type'</span>] = <span class="string">'application/x-www-form-urlencoded'</span></span><br></pre></td></tr></table></figure><h5 id="我们在main-js中，把qs挂载到vue的原型上去"><a href="#我们在main-js中，把qs挂载到vue的原型上去" class="headerlink" title="我们在main.js中，把qs挂载到vue的原型上去"></a>我们在main.js中，把qs挂载到vue的原型上去</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> qs <span class="keyword">from</span> <span class="string">'qs'</span></span><br><span class="line">Vue.prototype.qs = qs</span><br></pre></td></tr></table></figure><h5 id="我们发送请求的时候把数据经过qs的方法处理一下"><a href="#我们发送请求的时候把数据经过qs的方法处理一下" class="headerlink" title="我们发送请求的时候把数据经过qs的方法处理一下"></a>我们发送请求的时候把数据经过qs的方法处理一下</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.qs.stringify(_request)</span><br></pre></td></tr></table></figure><p><strong>最后说明：这只是本人自己的一些见解，有不足的地方，欢迎大家前来指正。</strong></p>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> axios </tag>
            
            <tag> OPTION </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在vue中使用进度条插件nprogress</title>
      <link href="//articles/nprogress/"/>
      <url>//articles/nprogress/</url>
      
        <content type="html"><![CDATA[<h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><p><code>npm install nprogress --save</code></p><h5 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h5><p><img src="https://img-blog.csdnimg.cn/20190920135614297.png" alt=""><br><strong>必须引入在main.js项目的入口文件中引入这个css样式</strong></p><a id="more"></a><h5 id="在项目的路由文件文件中使用"><a href="#在项目的路由文件文件中使用" class="headerlink" title="在项目的路由文件文件中使用"></a>在项目的路由文件文件中使用</h5><p><img src="https://img-blog.csdnimg.cn/20190920140301280.png" alt=""><br><strong>必须引入这个两个文件</strong></p><h5 id="借助vue全局的路由钩子，就可以轻松实现加载页面，出现进度条的功能了。"><a href="#借助vue全局的路由钩子，就可以轻松实现加载页面，出现进度条的功能了。" class="headerlink" title="借助vue全局的路由钩子，就可以轻松实现加载页面，出现进度条的功能了。"></a>借助vue全局的路由钩子，就可以轻松实现加载页面，出现进度条的功能了。</h5><p><img src="https://img-blog.csdnimg.cn/20190920141102912.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMTg2NzMw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>5.当然，如果你觉得它的颜色不好看，，也是可以改它的颜色的。</p><p>在<font color=red>app.vue</font> 的 <font color=red>style</font>中添加<br><img src="https://img-blog.csdnimg.cn/20190920141930777.png" alt="在这里插入图片描述"><br>6.当然它还有一些详细的配置，有兴趣的小伙伴可以研究一下</p><p><img src="https://img-blog.csdnimg.cn/20190920143241659.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMTg2NzMw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>最后说明：这只是本人自己的一些见解，有不足的地方，欢迎大家前来指正。</strong></p>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> js </tag>
            
            <tag> 进度条 </tag>
            
            <tag> nprogress </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在vue中如何使用clipboard复制文字</title>
      <link href="//articles/clipboard/"/>
      <url>//articles/clipboard/</url>
      
        <content type="html"><![CDATA[<h5 id="首先安装-clipboard"><a href="#首先安装-clipboard" class="headerlink" title="首先安装**clipboard"></a>首先安装**<code>clipboard</code></h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install  clipboard</span><br></pre></td></tr></table></figure><p>==如果你安装了淘宝镜像也可以使用cnpm==</p><h5 id="在需要使用地方引入"><a href="#在需要使用地方引入" class="headerlink" title="在需要使用地方引入"></a>在需要使用地方引入</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Clipboard <span class="keyword">from</span> <span class="string">'clipboard'</span></span><br></pre></td></tr></table></figure><a id="more"></a><h5 id="使用-Clipboard提供的方法"><a href="#使用-Clipboard提供的方法" class="headerlink" title="使用  Clipboard提供的方法"></a>使用  Clipboard提供的方法</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">linecopy(index)&#123;</span><br><span class="line">      <span class="keyword">let</span> clipboard =<span class="keyword">new</span> Clipboard(<span class="string">'.spa'</span>,&#123;</span><br><span class="line">        text: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">          <span class="keyword">return</span> index</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">      clipboard.on(<span class="string">'success'</span>,e=&gt;&#123;</span><br><span class="line">        <span class="keyword">this</span>.$notify(&#123;</span><br><span class="line">          title: <span class="string">'成功'</span>,</span><br><span class="line">          message: <span class="string">'复制成功'</span>,</span><br><span class="line">          type: <span class="string">'success'</span>,</span><br><span class="line">          duration: <span class="number">400</span></span><br><span class="line">        &#125;)</span><br><span class="line">        clipboard.destroy();</span><br><span class="line">      &#125;)</span><br><span class="line">      clipboard.on(<span class="string">'error'</span>,e=&gt;&#123;</span><br><span class="line">        <span class="keyword">this</span>.$notify.err(&#123;</span><br><span class="line">          title: <span class="string">'失败'</span>,</span><br><span class="line">          message: <span class="string">'复制失败'</span>,</span><br><span class="line">          duration: <span class="number">400</span></span><br><span class="line">        &#125;)</span><br><span class="line">        clipboard.destroy();</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>说明如下</strong></p><p><strong>这里的 ==linecopy== 是点击复制按钮执行的方法，==参数是你要复制的内容==,  <code>.spa代表着你按钮的类名</code></strong></p>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> js </tag>
            
            <tag> 复制 </tag>
            
            <tag> clipboard </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何在vue项目中，更改富文本编辑器vue-quill-editor的默认字体大小。</title>
      <link href="//articles/vue-quill-editor/"/>
      <url>//articles/vue-quill-editor/</url>
      
        <content type="html"><![CDATA[<p>   <strong>它默认有4种字体大小，但是在我们实际的项目，可能不只是想要这几种，还想添加自定义的字体大小。</strong><img src="https://img-blog.csdnimg.cn/20190921132036411.png" alt="在这里插入图片描述"><br><strong>下面我就来教大家，怎样改它的默认字体大小</strong></p><h5 id="我们先改，自己封装的vue-quill-editor组件中的字体大小，如图是我自定义的字体大小，false代表的默认选中的字体大小-默认选中的14px。"><a href="#我们先改，自己封装的vue-quill-editor组件中的字体大小，如图是我自定义的字体大小，false代表的默认选中的字体大小-默认选中的14px。" class="headerlink" title="我们先改，自己封装的vue-quill-editor组件中的字体大小，如图是我自定义的字体大小，false代表的默认选中的字体大小,默认选中的14px。"></a>我们先改，自己封装的vue-quill-editor组件中的字体大小，如图是我自定义的字体大小，<font color=red>false</font>代表的默认选中的<font color=red>字体大小</font>,默认选中的<font color=red>14px</font>。</h5><p><img src="https://img-blog.csdnimg.cn/20190921133609122.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMTg2NzMw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h5 id="我们先在-node-modules包-中找到-quill-，再找到它下面的dist文件夹。"><a href="#我们先在-node-modules包-中找到-quill-，再找到它下面的dist文件夹。" class="headerlink" title="我们先在  node_modules包 中找到  quill ，再找到它下面的dist文件夹。"></a>我们先在 <font color=red> node_modules包 </font>中找到 <font color=red> quill ，</font>再找到它下面的<font color=red>dist文件夹</font>。</h5><a id="more"></a><p><img src="https://img-blog.csdnimg.cn/20190921133840764.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMTg2NzMw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h5 id="在quill-js中更改代码如下，要和你上面配置文件中的字体大小设置保持一至。"><a href="#在quill-js中更改代码如下，要和你上面配置文件中的字体大小设置保持一至。" class="headerlink" title="在quill.js中更改代码如下，要和你上面配置文件中的字体大小设置保持一至。"></a>在<font color=red>quill.js</font>中更改代码如下，<strong>要和你上面配置文件中的字体大小设置保持一至</strong>。</h5><p><img src="https://img-blog.csdnimg.cn/20190921134309126.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190921134844696.png" alt="在这里插入图片描述"></p><h5 id="在quill-core-js中更改代码如下，也要和你上面配置文件中的字体大小设置保持一至。"><a href="#在quill-core-js中更改代码如下，也要和你上面配置文件中的字体大小设置保持一至。" class="headerlink" title="在quill.core.js中更改代码如下，也要和你上面配置文件中的字体大小设置保持一至。"></a>在<font color=red>quill.core.js</font>中更改代码如下，<strong>也要和你上面配置文件中的字体大小设置保持一至</strong>。</h5><p><img src="https://img-blog.csdnimg.cn/20190921134602102.png" alt="在这里插入图片描述"></p><h5 id="接下来修改就要修改css样式了"><a href="#接下来修改就要修改css样式了" class="headerlink" title="接下来修改就要修改css样式了"></a>接下来修改就要修改<font color=red>css样式</font>了</h5><p>&lt;1&gt;先找到<font color=red>quill.bubble.css</font>，修改如下<br><img src="https://img-blog.csdnimg.cn/20190921140126888.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMTg2NzMw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>&lt;2&gt;再找到<font color=red>quill.snow.css </font>，修改如下<br><img src="https://img-blog.csdnimg.cn/2019092114010124.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMTg2NzMw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>&lt;3&gt;最后找到<font color=red>quill.core.css</font>，修改如下<br><img src="https://img-blog.csdnimg.cn/20190921140321662.png" alt="在这里插入图片描述"><br>&lt;4&gt;<strong>最最后强调一遍，所有的自定义字体大小，都要设置样式，本人只是列举出一个，作为例子。</strong></p><p>6.<strong>这就修改成功了，效果如下图</strong><br><img src="https://img-blog.csdnimg.cn/20190921140658703.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMTg2NzMw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><strong>最后说明：这只是本人自己的一些见解，有不足的地方，欢迎大家前来指正。</strong></p>]]></content>
      
      
      <categories>
          
          <category> vue-quill-editor </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> js </tag>
            
            <tag> 富文本编辑器 </tag>
            
            <tag> vue-quill-editor </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
